pipeline {
    agent any
    options {
        timeout(time: 40, unit: 'MINUTES')
    }

    parameters {
        string(name: 'GITHUB_CREDENTIAL', defaultValue: 'github_creds', description: 'Github access credentials id')
        string(name: 'GITHUB_REPO_URL', defaultValue: 'https://github.com/itgenius-devops/itgenius-springboot-app-monolithic-cicd.git', description: 'Github repository url')
        string(name: 'GITHUB_BRANCH', defaultValue: 'main', description: 'Github branch where the Terraform code is located')
        choice(name: 'TERRAFORM_ACTION', choices: ['', 'apply', 'destroy'], description: 'Select Terraform action: Apply or Destroy')
    }

    environment {
        GITHUB_CREDENTIAL = "${params.GITHUB_CREDENTIAL}"
        GITHUB_REPO_URL = "${params.GITHUB_REPO_URL}"
        GITHUB_BRANCH = "${params.GITHUB_BRANCH}"
        TERRAFORM_ACTION = "${params.TERRAFORM_ACTION}"
    }

    stages {
        stage("Validate Parameters") {
            steps {
                script {
                    if (TERRAFORM_ACTION == null || TERRAFORM_ACTION.trim() == '') {
                        error('TERRAFORM_ACTION is a required parameter. Please choose either "apply" or "destroy".')
                    }
                }
            }
        }

        stage("Checkout Code From GitHub") {
            steps {
                script {
                    git branch: "${GITHUB_BRANCH}", credentialsId: "${GITHUB_CREDENTIAL}", url: "${GITHUB_REPO_URL}"
                }
            }
        }

        stage('Terraform Init') {
            steps {
                script {
                    // Change into the Terraform code directory
                    dir("${WORKSPACE}/terraform/terraform-config-files") {
                            sh 'terraform init -reconfigure'                       
                    }
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                script {
                    dir("${WORKSPACE}/terraform/terraform-config-files") {
                            sh 'terraform plan'                       
                    }
                }
            }
        }

        stage('Terraform Apply Or Destroy') {
            steps {
                script {
                    echo """
                    #################################################################
                    #                                                               #
                    #                  USER APPROVAL REQUIRED !!!                   #
                    #                                                               #
                    # 1. Please verify the action you selected: ${TERRAFORM_ACTION} #     
                    # 2. Ensure all configurations and the Terraform plan           #
                    #    have been thoroughly reviewed.                             #
                    # 3. This operation will execute: terraform ${TERRAFORM_ACTION} #     
                    #                                                               #
                    #             Press 'Yes, Proceed' to continue.                 #
                    #################################################################
                    """
                    timeout(time: 10, unit: 'MINUTES') {
                        input message: "Have you reviewed the Terraform plan and wish to proceed with '${TERRAFORM_ACTION}'?", ok: "Yes, Proceed"
                    }

                    dir("${WORKSPACE}/terraform/terraform-config-files") {
                        sh "terraform ${TERRAFORM_ACTION} -auto-approve"
                    }
                }
            }
        }
    }
}
